FROM continuumio/miniconda3
LABEL maintainer="Brian Wilson <brian@wildsong.biz>"
LABEL version="1.1"
LABEL biz.wildsong.name="mapproxy"

# Because of the continuumio base image, the installation will go into /opt/conda


# These ARGs can be overridden with "docker-compose build"
# Look in the docker-compose.yml file.
#
ARG VIRTUAL_HOST=host.example.com
ARG VIRTUAL_PORT=8080
ARG LETSENCRYPT_HOST=host.example.com
ARG LETSENCRYPT_MAIL=webmaster@example.com

ENV PROJ_LIB="/opt/conda/share/proj" \
    MAPPROXY_BASE="/srv/mapproxy"

WORKDIR /tmp
COPY requirements.txt ./

# Get the PROJ datum files
ADD https://download.osgeo.org/proj/proj-datumgrid-latest.zip $PROJ_LIB
# You might need to add other datumgrid files for your region
ADD https://download.osgeo.org/proj/proj-datumgrid-north-america-latest.zip $PROJ_LIB

# This will upgrade conda, so the fact that the base image is old does not matter
RUN conda config --add channels conda-forge &&\
    conda install -y --file requirements.txt

RUN conda install -y git &&\
    git clone https://github.com/mapproxy/mapproxy.git &&\
    cd mapproxy && python setup.py install

# You don't have to unzip, ADD does that now.
# Maybe someday I'll be able to download and unzip in one step.
RUN conda install -y -c conda-forge unzip
#WORKDIR $PROJ_LIB
#RUN for z in *.zip; do unzip -o $z; done &&\
#    rm -f *.zip

WORKDIR $MAPPROXY_BASE
COPY log.ini .

# This is silly all these files should be added later

WORKDIR $MAPPROXY_BASE/config
COPY globals.yaml .
COPY seed.yaml .
WORKDIR $MAPPROXY_BASE/config/services
COPY city-aerials.yaml .
COPY Astoria2015_coverage.geojson .
COPY Astoria2010_coverage.geojson .
COPY Astoria2004_coverage.geojson .
COPY county-aerials.yaml .
COPY lidar-2020.yaml .
COPY red-color-ramp.sld .
COPY planning-ocmp.yaml .
COPY usfws-nwi.yaml .

VOLUME $MAPPROXY_BASE/cache
EXPOSE $VIRTUAL_PORT

WORKDIR $MAPPROXY_BASE
COPY start_mapproxy.py .
COPY start_mapproxy.sh .
RUN chmod 755 start_mapproxy.sh

# Make these setting available in the image environment
ENV VIRTUAL_HOST ${VIRTUAL_HOST}
ENV VIRTUAL_PORT ${VIRTUAL_PORT}
ENV LETSENCRYPT_HOST ${LETSENCRYPT_HOST}
ENV LETSENCRYPT_MAIL $[LETSENCRYPT_MAIL}

# Start a waitress WSGI server
# You have to add an argument to specify the config
# as a CMD in the docker-compose file.
ENTRYPOINT ["python3", "start_mapproxy.py", "log.ini"]




